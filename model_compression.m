% For this script, the CobraToolbox (version 2.32.0) and
% CellNetAnalyzer(2021.1) were used

load PpaPruned

FG = 1; % Degree of freedom

rational = 0;

% Network compression from the PpaPruned file.

% The following reactions are specified as protected reactions
protect_reac_pr = [mfindstr(PpaPruned.reacID,'R_PGI');...
    mfindstr(PpaPruned.reacID,'R_G6PDH2');...
    mfindstr(PpaPruned.reacID,'R_PFK');...
    mfindstr(PpaPruned.reacID,'R_FBP');...
    mfindstr(PpaPruned.reacID,'R_FBA');...
    mfindstr(PpaPruned.reacID,'R_GAPD');...
    mfindstr(PpaPruned.reacID,'R_PGK');...
    mfindstr(PpaPruned.reacID,'R_PGM');...
    mfindstr(PpaPruned.reacID,'R_ENO');...
    mfindstr(PpaPruned.reacID,'R_PYK');...
    mfindstr(PpaPruned.reacID,'R_ACtp');...
    mfindstr(PpaPruned.reacID,'R_PC');...
    mfindstr(PpaPruned.reacID,'R_RPE');...
    mfindstr(PpaPruned.reacID,'R_RPI');...
    mfindstr(PpaPruned.reacID,'R_TKT1');...
    mfindstr(PpaPruned.reacID,'R_TKT2');...
    mfindstr(PpaPruned.reacID,'R_TALA');...
    mfindstr(PpaPruned.reacID,'R_CSm');...
    mfindstr(PpaPruned.reacID,'R_ACONTm');...
    mfindstr(PpaPruned.reacID,'R_ICDHxm');...
    mfindstr(PpaPruned.reacID,'R_ICDHym');...
    mfindstr(PpaPruned.reacID,'R_AKGDam');...
    mfindstr(PpaPruned.reacID,'R_AKGDbm');...
    mfindstr(PpaPruned.reacID,'R_PDHcm');...
    mfindstr(PpaPruned.reacID,'R_ME1m');...
    mfindstr(PpaPruned.reacID,'R_ME2m');...
    mfindstr(PpaPruned.reacID,'R_SUCOASm');...
    mfindstr(PpaPruned.reacID,'R_SUCD1m');...
    mfindstr(PpaPruned.reacID,'R_FUMm');...
    mfindstr(PpaPruned.reacID,'R_MDHm');...
    mfindstr(PpaPruned.reacID,'R_ATPM');...
    mfindstr(PpaPruned.reacID,'R_MALOAAtp');...
    mfindstr(PpaPruned.reacID,'R_SUCCtp');...
    mfindstr(PpaPruned.reacID,'R_OAAt2m');...
    mfindstr(PpaPruned.reacID,'R_CSp');...
    mfindstr(PpaPruned.reacID,'R_ACSp');...
    mfindstr(PpaPruned.reacID,'R_MDH');...
    mfindstr(PpaPruned.reacID,'R_ICLx');...
    mfindstr(PpaPruned.reacID,'R_MALSp');...
    mfindstr(PpaPruned.reacID,'R_CITtp');...
    mfindstr(PpaPruned.reacID,'R_MALSUCCtm');...
    mfindstr(PpaPruned.reacID,'R_AKGMALtm');...
    mfindstr(PpaPruned.reacID,'R_ASPTAm');...
    mfindstr(PpaPruned.reacID,'R_ASPGLU2m');...
    mfindstr(PpaPruned.reacID,'R_GLYCt');...
    mfindstr(PpaPruned.reacID,'R_growth');...
    mfindstr(PpaPruned.reacID,'R_O2tm');...
    mfindstr(PpaPruned.reacID,'R_Ex_biomass');...
    mfindstr(PpaPruned.reacID,'R_Ex_co2');...
    mfindstr(PpaPruned.reacID,'R_Ex_o2');...
    mfindstr(PpaPruned.reacID,'R_Ex_h2o');...
    mfindstr(PpaPruned.reacID,'R_Ex_nh4');...
    mfindstr(PpaPruned.reacID,'R_Ex_pi');...
    mfindstr(PpaPruned.reacID,'R_Ex_h');...
    mfindstr(PpaPruned.reacID,'R_Ex_so4');...
    mfindstr(PpaPruned.reacID,'R_Ex_glyc');...
    mfindstr(PpaPruned.reacID,'R_PYRDC');...   
    mfindstr(PpaPruned.reacID,'R_ALDD2x');...  
    mfindstr(PpaPruned.reacID,'R_Ex_abt_D')]; 

% Protect the AA, so they are included into the biomass reaction.
protect_spec = [mfindstr(PpaPruned.specID,'M_ala_L_c');...
    mfindstr(PpaPruned.specID,'M_asp_L_c');...
    mfindstr(PpaPruned.specID,'M_asn_L_c');...
    mfindstr(PpaPruned.specID,'M_arg_L_c');...
    mfindstr(PpaPruned.specID,'M_cys_L_c');...
    mfindstr(PpaPruned.specID,'M_gly_c');...
    mfindstr(PpaPruned.specID,'M_glu_L_c');...
    mfindstr(PpaPruned.specID,'M_gln_L_c');...
    mfindstr(PpaPruned.specID,'M_his_L_c');...
    mfindstr(PpaPruned.specID,'M_leu_L_c');...
    mfindstr(PpaPruned.specID,'M_lys_L_c');...
    mfindstr(PpaPruned.specID,'M_ile_L_c');...
    mfindstr(PpaPruned.specID,'M_met_L_c');...
    mfindstr(PpaPruned.specID,'M_phe_L_c');...
    mfindstr(PpaPruned.specID,'M_pro_L_c');...
    mfindstr(PpaPruned.specID,'M_ser_L_c');...
    mfindstr(PpaPruned.specID,'M_thr_L_c');...
    mfindstr(PpaPruned.specID,'M_trp_L_c');...
    mfindstr(PpaPruned.specID,'M_tyr_L_c');...
    mfindstr(PpaPruned.specID,'M_val_L_c')];

rmCR = 0; % dependent metabolites are not removed

rmChoke = 0; % compression of choke points is not conducted

blocked_reac = []; % indices of reactions that can be deleted before compression; here: no blocked reactions

[redsmat,irrev,reacidx,metidx,PpaCore]=CNAcompressMFNetwork(PpaPruned,protect_reac_pr,protect_spec,rmCR,rmChoke,rational,blocked_reac,1);

%% Convert PpaCore model into CbModel
PpaCore = convertCNAModelToCbModel(PpaCore);


  




